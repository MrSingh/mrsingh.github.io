<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Puneet&#39;s Notes On Data &amp; Software Engineering</title>
    <link>/</link>
    <description>Recent content on Puneet&#39;s Notes On Data &amp; Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 29 Jan 2021 14:50:18 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Requests and Beautiful Soup</title>
      <link>/python/ws_requests_and_beautifulsoup/</link>
      <pubDate>Fri, 29 Jan 2021 14:50:18 +0000</pubDate>
      
      <guid>/python/ws_requests_and_beautifulsoup/</guid>
      <description>Import Modules import requests from bs4 import BeautifulSoup # Example adapted from the links below # https://requests.readthedocs.io/en/master/ # https://www.crummy.com/software/BeautifulSoup/bs4/doc/ Request a Web Page html_page = requests.get(&amp;#39;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&amp;#39;, auth=(&amp;#39;user&amp;#39;, &amp;#39;pass&amp;#39;)) Return Page Headers # Return Page Headers html_page.headers[&amp;#39;content-type&amp;#39;] &#39;text/html; charset=UTF-8&#39; Return Page Status Code # Return Page Status Code html_page.status_code 200 Create a Beautiful Soup Object with HTML text # Create a Beautiful Soup Object with HTML text soup = BeautifulSoup(html_page.</description>
    </item>
    
    <item>
      <title>Python os.walk()</title>
      <link>/python/oswalk/</link>
      <pubDate>Thu, 28 Jan 2021 14:50:18 +0000</pubDate>
      
      <guid>/python/oswalk/</guid>
      <description>Import Modules # Import Module import os Set Path # Set Path path = &amp;#39;../../content/&amp;#39; Find All Markdown Files In All Content Folders # Find all markdown filesin all content folders all_ipynb_files = [os.path.join(root, name) for root, dirs, files in os.walk(path) for name in files if name.endswith((&amp;#34;.md&amp;#34;))] all_ipynb_files [&#39;../../content/archive\\get-started-with-angular-2.md&#39;,&#39;../../content/git\\basic-git-commands.md&#39;,&#39;../../content/powershell\\PowerShell.md&#39;,&#39;../../content/python\\load_csv.md&#39;,&#39;../../content/python\\load_json.md&#39;,&#39;../../content/python\\ws_requests_and_beautifulsoup.md&#39;,&#39;../../content/vscode\\inserting_date_time.md&#39;,&#39;../../content/vscode\\vscode_python_issues.md&#39;,&#39;../../content/vscode\\vscode_shortcuts.md&#39;] </description>
    </item>
    
    <item>
      <title>Load a JSON</title>
      <link>/python/load_json/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 -0800</pubDate>
      
      <guid>/python/load_json/</guid>
      <description>import pandas as pd #Set JSON filepath json_filepath = &amp;#34;data/load_json_example.json&amp;#34; #default is &amp;#39;columns&amp;#39; df = pd.read_json(json_filepath, orient=&amp;#34;columns&amp;#34;) df .dataframe tbody tr th:only-of-type {vertical-align: middle;}.dataframe tbody tr th {vertical-align: top;}.dataframe thead th {text-align: right;} 
user_nameidentifierfirst_namelast_name0booker129012.0RachelBooker1grey072070.0LauraGrey2johnson814081.</description>
    </item>
    
    <item>
      <title>Load a CSV</title>
      <link>/python/load_csv/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 -0700</pubDate>
      
      <guid>/python/load_csv/</guid>
      <description># Import Pandas import pandas as pd #Load CSV file into a dataframe with Pandas df = pd.read_csv(&amp;#39;data/load_csv_example.csv&amp;#39;) #Output Dataframe df .dataframe tbody tr th:only-of-type {vertical-align: middle;}.dataframe tbody tr th {vertical-align: top;}.dataframe thead th {text-align: right;} 
user_nameidentifierfirst_namelast_name0booker129012RachelBooker1grey072070LauraGrey2johnson814081CraigJohnson3jenkins469346MaryJenkins4smith795079JamieSmith# Load a csv file with no headers df = pd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/archive/get-started-with-angular-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archive/get-started-with-angular-2/</guid>
      <description>Get started with Angular 2 in 5 minutes This is quick guide to help you get started with Angular 2.
Assumptions  Node, npm and Visual Studio Code are all already installed.  Get started From Visual Studio Code start up the Integrated Terminal via View &amp;gt; Integrated Terminal.
Then install Angular CLI with the following command:
npm i -g angular-cliNow you have Angular CLI installed lets create a sample app.</description>
    </item>
    
    <item>
      <title></title>
      <link>/git/basic-git-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/git/basic-git-commands/</guid>
      <description>Basic Git Commands Add remote repository git remote add origin https://github.com/user/repo.gitCheck Remote Repository git remote -vStage All Changes git stage -allChange Current Branch Name git branch -m &amp;lt;newname&amp;gt;Change Any Branch Name git branch -m &amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;Adding existing repository to Git Link</description>
    </item>
    
    <item>
      <title></title>
      <link>/powershell/powershell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/powershell/powershell/</guid>
      <description>Intro to Powershell Things to know Execution Policy By default Powershell is secure a philosophy that means that doublecliking a Powershell script in Windows Explorer won&amp;rsquo;t execute the script.
Powershell has four execution policies - these govern how a script is executed.
 Restricted AllSigned RemoteSigned Unrestricted  Get-ExecutionPolicy Set-ExecutionPolicy Restricted Set-ExecutionPolicy Unrestricted Set-ExecutionPolicy RemoteSigned </description>
    </item>
    
    <item>
      <title></title>
      <link>/python/ossystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/ossystem/</guid>
      <description>--- title: &amp;#34;Python os.walk()&amp;#34; Description: &amp;#34;Python method walk() generates directory file names.&amp;#34; date: 2021-01-28T14:50:18Z draft: true --- # SYSTEM OS EXAMPLE # Command to execute  # Using Windows OS command  # cmd = &amp;#39;start chrome&amp;#39; cmd = &amp;#39;notepad&amp;#39; # Using os.system() method  os.system(cmd) </description>
    </item>
    
    <item>
      <title></title>
      <link>/vscode/inserting_date_time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/vscode/inserting_date_time/</guid>
      <description>Insert Date Time String in Visual Studio Code Install &amp;lsquo;Insert Date String&amp;rsquo; Extension Extension
Click on Install from above link or use the steps below.
 Open Command Palette: Ctrl + Shift + P Find: Install Extensions Search: Insert Date String Install Use Ctrl + Shift + I to insert the date time to the cursor location.  Check documentation for more options.</description>
    </item>
    
    <item>
      <title></title>
      <link>/vscode/vscode_python_issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/vscode/vscode_python_issues/</guid>
      <description>Python Issues in VSCode Jupyter notebook fails to export to python script Error 2020-12-16 16:06:17: Jupyter Kernel Spec not found for a local connectionFix pip install nbconvert </description>
    </item>
    
    <item>
      <title></title>
      <link>/vscode/vscode_shortcuts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/vscode/vscode_shortcuts/</guid>
      <description>Visual Studio Code | Shortcuts Toggle Integrated Terminal Ctrl + &#39; Toggle Side Bar Ctrl + B Open Settings Ctrl + , Quick Open File Ctrl + p Open Preview Mode ToDO Move File to Split Editor Ctrl + \ Find and Replace Find Ctrl + f Find Selection Ctrl + h Find &amp;amp; Replace Selection Execute Ctrl + Enter Find &amp;amp; Replace All Execute Ctrl + Alt + Enter Command Palette Ctrl + Shift + P Toggle Comment Ctrl + / Copy Line - selects the line the cursur is on Ctrl + C Duplicate Line // AboveCtrl + Alt + Up// BelowCtrl + Alt + Down Multiple Cursors Ctrl + Click// OrCtrl + Shift + Alt + Up/Down Select Word Ctrl + D Select All Words ToDo Function to Rename f2 Go to Function Definition Ctrl + Click Zen Mode Toggle Ctrl + K// ThenZ </description>
    </item>
    
  </channel>
</rss>
